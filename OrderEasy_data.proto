option optimize_for = SPEED;
message OrderEasy_data{
    	enum REQType {
            init = 0;//初始化
            order=1;//下单
            close=2;//强平
            cancel=3;//撤单
    	}
	enum Direction {
            buy  = 0;
            sell = 1;
	}
        enum PosStatus {
            Long =0;
            Short=1;
        }
        enum OrderType {
            limit = 0;//锁定价格
            market = 1;//市场价下单
            rev = 2;//保持持仓量不变，以对手价改变持仓方向 空-》多 | 多-》空
            strat=3;//策略下单(根据参数自动平仓)
        }
	enum CancelType{
            cancelOne=0;//撤销挂单-锁定挂单价格
            cancelMarket=1;//撤销挂单-市场价格
            cancelAll=2;//撤销所有挂单-锁定+市场价格
            cancelStrategy=3;//撤销止盈止损
	}
        enum E_x{
            Exit=0;
            Entry=1;
        }
	required REQType reqType =1;
	optional OrderREQ orderReq =2;
	optional OrderRESP orderResp =3;
	optional CancelREQ  cancelReq =4;
	optional CancelRESP cancelResp =5;
	optional InitREQ  initReq =6;
	optional InitRESP initResp =7;
        
	message OrderREQ{
            required string guid = 1;
            required string symbol =2;
            required OrderType orderType=3;
            optional double price =4;
            optional int32 qty =5;
            optional Direction dir =6;
            repeated Strategy strat =7;
	}
	message OrderRESP{
            required int32 ErrorID = 1;
            optional string ErrorMsg = 2;
            optional int32 orderref =3;
            optional string orderTime = 4;
            optional E_x e_x = 5;
            optional int32 qty = 6;
            optional double price=7;
            optional int32 notCloseVol =8;
            optional PosStatus pos=9;
	}
	message CancelREQ{
            required string symbol =1;
            required CancelType cancelType =2;
            optional Direction dir = 3;
            repeated string guid =4;
            optional double price =5;
	}
	message CancelRESP{
            required string guid =1;
            required int32 ErrorID = 2;
            optional string cancelTime = 3;
            optional int32 notCloseVol =4;
            optional PosStatus pos =5;
            optional string ErrorMsg = 6;
	}
	message InitREQ{
            required string account =1;
            required string symbol =2;
            optional int32 maxVol =3;
            optional int32 stopLoss =4;
            optional int32 profigTarget =5;
	}
	message InitRESP{
            required string symbol =1;
            required int32 ErrorID = 2;
            optional string ErrorMsg = 3;
	}
	message Strategy{
            required int32 vol =1;
            required double maxPrice = 2;
            required double minPrice = 3;
	}
}
